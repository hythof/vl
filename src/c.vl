main = eval parse("1 + 2")

parse src = ast.op2("+" ast.int(1) ast.int(2))

eval_op2 "+" l r = l + r
eval_op2 "-" l r = l - r
eval (ast.int n) = n
eval (ast.op2 o) =
  l = eval o.left
  r = eval o.right
  eval_op2 o.op l r

type parser:
  src string
  pos int

enum ast:
# value
  char char
  string string
  int int
  real double
  bool bool
# container
  tuple [ast]
  list [ast]
  map [(string, ast)]
  struct [(string, ast)]
# expression
  func [([arg], ast)]
  ref string
  op2:
    op string
    left ast
    right ast
  apply:
    target ast
    args [ast]
  stmt [line]
# enum
  enum string ast
# void
  void
# runtime only
  error string
  closure [(string, ast)] ast

enum arg:
  ref string
  type:
    name string
    capture string
  match ast
  opt:
    name string
    default ast
