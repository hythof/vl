levenshtein a b =
  a1.times(i -> dp(i 0) := i)
  b1.times(j -> dp(0 j) := j)
  (i, j).times(fill)
  dp(a1 b1)
with:
  dp array(n m)
  a1 = a.length + 1
  b1 = b.length + 1
  fill i j =
    i1 = i + 1
    j1 = j + 1
    cost = a(i1) == b(j1)
    | 0
    | 1
    dp(i1 j1) := min(
      dp(i j1) + 1
      dp(i1 j) + 1
      dp(i1 j1) + cost)
